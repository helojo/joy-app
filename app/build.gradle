apply plugin: 'com.android.application'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':joy-library-android:library-joy')
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'

    defaultConfig {
        applicationId "com.joy.app"
        minSdkVersion 14
        targetSdkVersion 23
        versionCode Integer.parseInt(VERSION_CODE)
        versionName VERSION_NAME

        // Enabling multidex support. Requires Build-Tools 21.1.0, and Support repository rev 8.
        multiDexEnabled false

        // Default we are in debug mode, will be overriden on task execution
        rootProject.ext.variantRelease = false
    }
    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
        }
        release {
            storeFile file("../qyer.keystore")
            storePassword "T0tototo"
            keyAlias "qyer"
            keyPassword "T0tototo"
        }
    }
    buildTypes {
        debug {
            debuggable true
            signingConfig signingConfigs.debug
//            versionNameSuffix "-debug"
//            applicationIdSuffix "debug"
        }
        release {
            debuggable false
            signingConfig signingConfigs.release
//            minifyEnabled true
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-project.txt'
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def apkName = APP_NAME + "-" + buildType.name/* + defaultConfig.versionName*/ + ".apk"
                    output.outputFile = new File(output.outputFile.parent, apkName)
                }
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
        }
        debug {
        }
        // moves the whole sourceSet (and its sub folders) to a new folder. This moves src/androidTest/* to tests/*
        androidTest.setRoot('tests')
    }
}

// Trigger build type (as soon as possible) and make some action via corresponding tasks
project.afterEvaluate {
    tasks.all { task ->
        if (task.name =~ /check.*Manifest/) {
            if (task.name =~ /[dD]ebug/) {
                task.dependsOn(onDebugTypeTriggered)
            } else {
                task.dependsOn(onReleaseTypeTriggered)
            }
        }
    }
}
task onDebugTypeTriggered << {
    rootProject.ext.variantRelease = false
}
task onReleaseTypeTriggered << {
    rootProject.ext.variantRelease = true
}